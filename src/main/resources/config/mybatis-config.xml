<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 配置全局属性 -->

    <settings>
        <!-- 这个配置使全局的映射器启用或禁用缓存 -->
        <setting name="cacheEnabled" value="true" />
        <!-- 允许 JDBC 支持生成的键。需要适合的驱动。如果设置为 true 则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如 Derby） -->
        <setting name="useGeneratedKeys" value="true" />
        <!-- 配置默认的执行器。SIMPLE 执行器没有什么特别之处。REUSE 执行器重用预处理语句。BATCH 执行器重用语句和批量更新  -->
        <setting name="defaultExecutorType" value="REUSE" />
        <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
        <!--<setting name="lazyLoadingEnabled" value="false"/>-->
        <!--<setting name="aggressiveLazyLoading" value="true"/>-->
        <!-- 设置超时时间，它决定驱动等待一个数据库响应的时间。  -->
        <setting name="defaultStatementTimeout" value="25000"/>
    </settings>

    <!--<typeAliases>-->
    <!--<typeAlias alias="User" type="com.easybuy.bean.User" />-->
    <!--</typeAliases>-->

    <!--<mappers>-->
    <!--<mapper resource="com/easybuy/mapper/UserMapper.xml"></mapper>-->
    <!--</mappers>-->

    <!--<plugins>-->
    <!--&lt;!&ndash; com.github.pagehelper为PageHelper类所在包名 &ndash;&gt;-->
    <!--<plugin interceptor="com.github.pagehelper.PageInterceptor">-->
    <!--&lt;!&ndash; 使用下面的方式配置参数，后面会有所有的参数介绍 &ndash;&gt;-->
    <!--<property name="param1" value="value1"/>-->
    <!--</plugin>-->
    <!--</plugins>-->


    <!--<plugins>-->
    <!--&lt;!&ndash; com.github.pagehelper为PageHelper类所在包名 &ndash;&gt;-->
    <!--<plugin interceptor="com.github.pagehelper.PageInterceptor">-->
    <!--&lt;!&ndash; 使用下面的方式配置参数，后面会有所有的参数介绍 &ndash;&gt;-->
    <!--<property name="supportMethodsArguments" value="true"/>-->
    <!--<property name="params" value="pageNum=pageNumKey;pageSize=pageSizeKey;"/>-->
    <!--</plugin>-->
    <!--</plugins>-->

    <!--<typeAliases>-->
    <!--<typeAlias type="com.easybuy.bean.Good" alias="Good"></typeAlias>-->
    <!--<typeAlias type="com.easybuy.bean.Good_Parameter" alias="Good_Parameter"></typeAlias>-->
    <!--</typeAliases>-->


    <typeAliases>
        <typeAlias type="main.com.myblog.model.VO.User" alias="UserVO"></typeAlias>
        <typeAlias type="main.com.myblog.model.VO.UserTag" alias="UserTagVO"></typeAlias>
        <typeAlias type="main.com.myblog.model.VO.UserSocial" alias="UserSocialVO"></typeAlias>
    </typeAliases>

</configuration>